local FluentLibrary = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Utility Functions
local function CreateInstance(className, properties)
    local instance = Instance.new(className)
    for property, value in pairs(properties) do
        instance[property] = value
    end
    return instance
end

function FluentLibrary:CreateWindow(title)
    local GUI = {
        Tabs = {},
        CurrentTab = nil
    }

    local ScreenGui = CreateInstance("ScreenGui", {
        Name = "FluentScreenGui",
        ResetOnSpawn = false
    })
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local MainFrame = CreateInstance("Frame", {
        Name = "FluentWindow",
        Size = UDim2.new(0, 500, 0, 350),
        Position = UDim2.new(0.5, -250, 0.5, -175),
        BackgroundColor3 = Color3.fromRGB(25, 25, 25),
        BorderSizePixel = 0
    })
    MainFrame.Parent = ScreenGui

    -- Make window draggable (dragging code remains the same)

    function GUI:CreateTab(tabName)
        local Tab = {
            Buttons = {},
            Toggles = {},
            Sliders = {},
            ColorPickers = {}
        }

        function Tab:CreateButton(buttonText, callback)
            local Button = CreateInstance("TextButton", {
                Text = buttonText,
                Size = UDim2.new(0, 180, 0, 30),
                Position = UDim2.new(0.05, 0, 0.1 + (#self.Buttons * 0.12), 0), -- Left side positioning
                BackgroundColor3 = Color3.fromRGB(45, 45, 45),
                TextColor3 = Color3.fromRGB(255, 255, 255)
            })
            Button.MouseButton1Click:Connect(callback)
            Button.Parent = MainFrame
            table.insert(self.Buttons, Button)
            return Button
        end

        function Tab:CreateToggle(toggleText, callback)
            local ToggleFrame = CreateInstance("Frame", {
                Size = UDim2.new(0, 180, 0, 30),
                Position = UDim2.new(0.35, 0, 0.1 + (#self.Toggles * 0.12), 0), -- Middle-left positioning
                BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            })
            -- ... rest of toggle code
            ToggleFrame.Parent = MainFrame
            table.insert(self.Toggles, ToggleFrame)
            return ToggleFrame
        end

        function Tab:CreateSlider(sliderText, min, max, default, callback)
            local SliderFrame = CreateInstance("Frame", {
                Size = UDim2.new(0, 180, 0, 45),
                Position = UDim2.new(0.65, 0, 0.1 + (#self.Sliders * 0.12), 0), -- Middle-right positioning
                BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            })
            -- ... rest of slider code
            SliderFrame.Parent = MainFrame
            table.insert(self.Sliders, SliderFrame)
            return SliderFrame
        end

        function Tab:CreateColorPicker(colorPickerText, defaultColor, callback)
            local ColorPickerFrame = CreateInstance("Frame", {
                Size = UDim2.new(0, 180, 0, 45),
                Position = UDim2.new(0.35, 0, 0.5 + (#self.ColorPickers * 0.12), 0), -- Bottom area positioning
                BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            })
            -- ... rest of color picker code
            ColorPickerFrame.Parent = MainFrame
            table.insert(self.ColorPickers, ColorPickerFrame)
            return ColorPickerFrame
        end

        return Tab
    end

    return GUI
end

return FluentLibrary
